1) Паттерн observer - при обновлении объекта, оповещаются все зависимые от него объекты.
2) Паттер decorator - динамически наделяет объект новыми возможностями и является гибкой альтернативой субклассированию.
3) Паттерн шаблонный метод - позволяет создавать метод шаблон, который реализует некий алгоритм, методы алгоритма
можно переопределять (не все), с помощью перехватчика можно опускать нектороые части алгоритма.


Принципы:
1. Инкапсулируйте то, что изменяется.
2. Предпочитайте композицию наследованию.
3. Программируйте на уровне интерфейсов.
4. Стремитесь к слабой связанности взаимодействующих объектов.
5. Классы должны быть открыты для расширения, но закрыты для изменения.
6. Код должен зависеть от абстракции, а не от конкретных классов.
7. Взаимодействуйте только с "друзьями". (т.е. такие вещи недопустимы - station.getThermometer.getTemperature())
8. Не вызывайте нас - мы вас сами вызовем.